/*!
 * Shap.js v1.1.2
 * homepage: https://shap-admin.faas.elenet.me
 */

'use strict';

function __$styleInject(css, returnValue) {
  if (typeof document === 'undefined') {
    return returnValue;
  }
  css = css || '';
  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';
  head.appendChild(style);
  
  if (style.styleSheet){
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
  return returnValue;
}

var Api = (function () {
    function Api(_config) {
        this._config = _config;
        this._key = _config.key;
        this._plugins = [];
    }
    Api.filterBaaSKeywords = function (params) {
        if (!params)
            return params;
        for (var _i = 0, _a = Api.baas; _i < _a.length; _i++) {
            var keyword = _a[_i];
            params[keyword] = undefined;
        }
        return params;
    };
    Api.prototype.handleBaaSPayload = function (data) {
        var _a = this, plugins = _a._plugins, key = _a._key;
        var body = Object.assign({}, Api.filterBaaSKeywords(data), { key: key });
        for (var _i = 0, plugins_1 = plugins; _i < plugins_1.length; _i++) {
            var plugin = plugins_1[_i];
            Object.assign(body, plugin(body) || {});
        }
        return JSON.stringify(body);
    };
    Api.prototype.mosaicRequestURL = function (tableName) {
        var _a = this._config.dev, dev = _a === void 0 ? false : _a;
        var url = dev ? 'ssr.alpha.elenet.me/shap-api' : 'ssr.ele.me/shap-api';
        return "https://" + url + "/" + tableName;
    };
    Api.prototype.request = function (method, tableName, data) {
        if (method === void 0) { method = 'post'; }
        if (data === void 0) { data = {}; }
        var mosaicRequestURL = this.mosaicRequestURL.bind(this, tableName);
        var lowerCaseMethodName = method.toLowerCase();
        var url = lowerCaseMethodName === 'get'
            ? mosaicRequestURL(undefined, data)
            : mosaicRequestURL();
        return fetch(url, {
            headers: new Headers({ 'content-type': 'application/json' }),
            method: lowerCaseMethodName.toUpperCase(),
            body: lowerCaseMethodName === 'get' ? null : this.handleBaaSPayload(data)
        }).then(function (response) { return response.json(); });
    };
    Api.prototype.plugin = function (cb) {
        this._plugins.push(cb);
    };
    Api.baas = ['_id', 'createdAt', 'updatedAt'];
    return Api;
}());
['patch', 'post', 'get', 'delete'].forEach(function (method) {
    Api.prototype[method] = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return this.request.apply(this, [method].concat(args));
    };
});

__$styleInject("@import \"//at.alicdn.com/t/font_474845_663hu195llsaif6r.css\";.sp__container--suspension{overflow-x:hidden;position:fixed;right:20px;bottom:0;z-index:100;-webkit-box-shadow:0 2px 4px 0 rgba(0,0,0,.1);box-shadow:0 2px 4px 0 rgba(0,0,0,.1);font-size:12px}.sp__container--suspension .sp__header{padding:10px 25px;background:-webkit-gradient(linear,right top,left top,from(rgba(70,160,252,.5)),to(#46a0fc));background:linear-gradient(270deg,rgba(70,160,252,.5),#46a0fc);border-top-left-radius:4px;border-top-right-radius:4px;cursor:pointer;color:#fff}.sp__container--suspension .sp__header i{padding-right:3px;vertical-align:-2px}.sp__container--suspension.sp__container--full .sp__body{height:100px}.sp__container--suspension .sp__body{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%;height:0;-webkit-transition:height .4s;transition:height .4s;-webkit-transition-timing-function:ease;transition-timing-function:ease;background:#fff;overflow:hidden}.sp__container--suspension .sp__body .sp__button{padding:8px 18px;border:1px solid #d8dce6;border-radius:4px;background:#fff;-webkit-transition:-webkit-transform .4s;transition:-webkit-transform .4s;transition:transform .4s;transition:transform .4s,-webkit-transform .4s;color:#5a5e66;font-size:16px;font-weight:400;cursor:pointer;outline:none}.sp__container--suspension .sp__body .sp__button i{font-size:15px}.sp__container--suspension .sp__body .sp__button:hover{border-color:#3a8ee6;-webkit-transform:translateY(-2px);transform:translateY(-2px);color:#3a8ee6;outline:none}.sp__container--suspension .sp__body .sp__button:first-of-type{margin-right:8px}.sp__container--suspension.sp__container--feedback .sp__feedback{opacity:1;z-index:1;-webkit-transform:translateX(0)!important;transform:translateX(0)!important}.sp__container--suspension .sp__feedback{position:absolute;opacity:0;z-index:-1;top:0;right:0;bottom:0;left:0;height:100px;line-height:100px;-webkit-transform:translateX(30%);transform:translateX(30%);-webkit-transition:-webkit-transform .2s;transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;background:#fff;text-align:center;font-size:13px;cursor:default;color:#5e6d82}",undefined);

var suspension = function (h) {
    var _this = this;
    var shapFeedbackButton = function (vote) {
        return {
            "class": { 'sp__button': true },
            on: {
                click: _this.sendDocFeedback.bind(_this, vote),
                mouseenter: function () { _this.deviation = "" + (vote ? '-' : ''); }
            }
        };
    };
    var content = [
        h('header.sp__header', { on: { click: this.toggleFeedbackPanel } }, [
            h('i.iconfont.icon-talk'),
            h('span', this.leadin)
        ]),
        h('div.sp__body', [
            h('button', shapFeedbackButton(5), [
                h('i.iconfont.icon-smile')
            ]),
            h('button', shapFeedbackButton(0), [
                h('i.iconfont.icon-sad')
            ]),
            h('div.sp__feedback', {
                style: {
                    transform: "translateX(" + this.deviation + "30%)"
                }
            }, this.feedback)
        ])
    ];
    return h('section.sp__container--suspension', {
        "class": {
            'sp__container--feedback': this.voted,
            'sp__container--full': this.spreading
        }
    }, content);
};

var plugin = function (formatter, hash) {
    var path = formatter ? formatter() : (hash ? window.location.hash : window.location.pathname);
    return { path: path, title: document.title };
};

var querySelector = document.querySelector.bind(document);
var toString = Object.prototype.toString;
var $ = function (selector) {
    return selector instanceof HTMLElement ? selector : querySelector(selector);
};
var isType = function (obj, types) {
    if (types === void 0) { types = ''; }
    var type = toString.call(obj).slice(8, -1).toLowerCase();
    return Array.isArray(types)
        ? types.map(function (t) { return t.toLowerCase(); }).includes(type)
        : types.toLowerCase() === type;
};
var clone = function (obj) { return JSON.parse(JSON.stringify(obj)); };
var noop = function () { };
function castArray(value) {
    return value == null ? [] : Array.isArray(value) ? value : [value];
}

var attend = function (absence) {
    return absence instanceof RegExp
        ? absence.test(window.location.href.replace(window.location.origin, ''))
        : (isType(absence, 'Function') ? absence() : undefined);
};

var VNode = (function () {
    function VNode(tag, props, children) {
        if (tag === void 0) { tag = 'div'; }
        if (props === void 0) { props = {}; }
        if (children === void 0) { children = []; }
        this.tag = tag;
        this.props = props;
        this.children = children;
    }
    return VNode;
}());

var createElementNode = document.createElement.bind(document);
var createTextNode = document.createTextNode.bind(document);
function createElement(_a, ctx) {
    var tag = _a.tag, props = _a.props, children = _a.children;
    var classProps = props["class"], eventsProps = props.on, styleProps = props.style;
    var className = tag.replace(/(^[^.]+)|(#.+)/g, '').slice(1).replace(/\./g, ' ');
    var el = createElementNode(tag.replace(/(\.|#).+/g, ''));
    if (className)
        el.className = className;
    for (var className_1 in classProps) {
        if (classProps[className_1])
            el.classList.add(className_1);
    }
    for (var style in styleProps)
        el.style[style] = styleProps[style];
    var _loop_1 = function (event) {
        el.addEventListener(event, function (e) { return eventsProps[event].call(ctx, e); });
    };
    for (var event in eventsProps) {
        _loop_1(event);
    }
    children.forEach(function (child) {
        var node = child instanceof VNode ? createElement(child, ctx) : createTextNode(child);
        el.appendChild(node);
    });
    return el;
}
function createCommentNode() {
    return document.createComment('');
}

function patch(prevNode, nextNode, el) {
    var nextNodeClass = nextNode.props["class"];
    var prevNodeClass = prevNode.props["class"];
    for (var className in nextNodeClass) {
        var value = nextNodeClass[className];
        if (prevNodeClass[className] !== value) {
            el.classList[value ? 'add' : 'remove'](className);
        }
    }
}

function createElement$1(tag, props, children) {
    return children == null && isType(props, ['string', 'array'])
        ? new VNode(tag, undefined, castArray(props))
        : new VNode(tag, props, castArray(children));
}

var Vue = (function () {
    function Vue(options) {
        var _a = options.el, el = _a === void 0 ? '' : _a, _b = options.data, data = _b === void 0 ? {} : _b, _c = options.methods, methods = _c === void 0 ? {} : _c, render = options.render, _d = options.created, created = _d === void 0 ? noop : _d;
        Vue._ = clone(data);
        this._data = data;
        this.$el = $(el);
        this._render = render;
        this.$options = { created: created };
        for (var event in methods)
            this[event] = methods[event].bind(this);
        this.observe();
        this.render();
    }
    Vue.prototype._render = function (h$$1) { };
    Vue.prototype.observe = function () {
        var _this = this;
        var data = this._data;
        var _loop_1 = function (key) {
            Object.defineProperty(this_1, key, {
                get: function () { return data[key]; },
                set: function (val) {
                    data[key] = val;
                    _this.patch();
                }
            });
        };
        var this_1 = this;
        for (var key in data) {
            _loop_1(key);
        }
    };
    Vue.prototype.patch = function () {
        var vnode = this._render(createElement$1);
        patch(this._vnode, vnode, this.$el);
        this._vnode = vnode;
    };
    Vue.prototype.render = function () {
        var vnode = this._render(createElement$1);
        var element = !vnode ? createCommentNode() : createElement(vnode, this);
        var $el = this.$el;
        document.body.replaceChild(element, $el);
        this.$el = element;
        this._vnode = vnode;
        if (vnode) {
            var cloned = clone(Vue._);
            for (var key in cloned)
                this[key] = cloned[key];
            this.$options.created.call(this);
        }
    };
    Vue._ = {};
    return Vue;
}());

var vm = function (_a) {
    var el = _a.el, api = _a.api, options = _a.options;
    var mode = options.mode, formatter = options.formatter, _b = options.hash, hash = _b === void 0 ? false : _b, leadin = options.leadin, feedback = options.feedback, absence = options.absence;
    api.plugin(plugin.bind(null, formatter, hash));
    return new Vue({
        el: el,
        data: {
            deviation: '',
            spreading: false,
            voted: false,
            previewScore: 0,
            score: 0,
            tooltip: {
                visible: false,
                left: 0
            },
            mode: mode || 'inline',
            leadin: leadin || '这个页面有帮助吗？',
            feedback: feedback || '感谢您的反馈！'
        },
        methods: {
            toggleFeedbackPanel: function () {
                this.spreading = !this.spreading;
            },
            sendDocFeedback: function (vote) {
                var _this = this;
                api.post('doc', { vote: vote })
                    .then(function () {
                    _this.voted = true;
                    setTimeout(function () { _this.spreading = false; }, 1000);
                }, noop);
            }
        },
        render: function (h) {
            if (absence != null && attend(absence))
                return;
            return suspension.call(this, h);
        },
        created: function () {
            api.post('pv').then(noop, noop);
        }
    });
};

var Shap = (function () {
    function Shap(_options) {
        this._options = _options;
        this._key = _options.key;
        this._dev = _options.dev || false;
        this.render();
    }
    Shap.prototype.render = function () {
        var _a = this, key = _a._key, dev = _a._dev, options = _a._options;
        var _b = options.el, el = _b === void 0 ? '.shap-container' : _b;
        var api = new Api({ key: key, dev: dev });
        this._vm = vm({ el: el, api: api, options: options });
    };
    Shap.prototype.spa = function () {
        var vm$$1 = this._vm;
        setTimeout(vm$$1.render.bind(vm$$1), 4);
    };
    return Shap;
}());

module.exports = Shap;
